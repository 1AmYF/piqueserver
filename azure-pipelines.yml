# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

jobs:

- job: 'Windows'
  pool:
    vmImage: 'VS2017-Win2016'
  strategy:
    matrix:
      Python35x64:
        python.version: '3.5'
        python.arch: 'x64'
      Python36x64:
        python.version: '3.6'
        python.arch: 'x64'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: '$(python.arch)'

  - script: |
      python -m pip install --upgrade pip
      pip install pypiwin32
      pip install -r requirements.txt
      pip install -r dev-requirements.txt
    displayName: 'Install dependencies'

  - script: |
      python setup.py install
      python setup.py build_ext --inplace
    displayName: 'Build'

  - script: |
      pytest --cov=piqueserver --cov=pyspades
    displayName: 'Test'
